{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":22,"width":1440,"height":874},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/zeke/code/personal/repo-collage","buffers":[{"text":"window.domready = require('domready');\nwindow.drag = require('drag');\nwindow.agent = require('superagent');\nwindow.repoCollage = new Firebase('https://repo-collage.firebaseio.com/');\nwindow.positions = repoCollage.child('positions');\n\nNodeList.prototype.forEach = Array.prototype.forEach;\n\nwindow.app = {}\n\napp.getRepos = function (user, cb) {\n\n  app.user = user\n\n  if (localStorage.repos) {\n    // console.log('use localStorage.repos')\n    return cb(JSON.parse(localStorage.repos))\n  } else {\n    agent.get(\"https://api.github.com/users/\" + user + \"/repos?per_page=1000\").end(function(err, res) {\n      localStorage.repos = JSON.stringify(res.body);\n      return cb(res.body);\n    });\n  }\n}\n\napp.renderRepos = function (repos, cb) {\n\n  app.repos = d3.select(\"#repos\")\n\n  app.repos\n    .selectAll(\"li\")\n      .data(repos)\n    .enter().append(\"li\")\n      .text(function(d) { return d.name; })\n      .style(\"top\", function(d,i) { return i*50 + \"px\"; })\n      .attr('id', function(d) { return app.user + \"-\" + d.name.replace(/\\./g, 'DOT')})\n      .attr('draggable', true)\n\n  // console.log(app.repos[0][0].childNodes);\n\n\n  // app.repos.map(function(el, index) {\n  //   console.log(el);\n  // //   drag(el)\n  // //     .end(function(el) {\n  // //       positions.child(this.el.id)\n  // //         .set([this.pos.x, this.pos.y].join(','))\n  // //     })\n  // //     .bind();\n\n  // });\n\n  return cb(repos);\n}\n\ndomready(function() {\n\n  app.getRepos('heroku', function(repos) {\n    app.renderRepos(repos, function() {\n      // console.log('done rendering repos')\n    });\n  })\n\n  repoCollage.on('value', function(snapshot) {\n    if (!snapshot.val()) return false;\n    var positions = snapshot.val().positions;\n    if (positions) {\n      Object.keys(positions).map(function(repo) {\n        // console.log(repo, positions[repo])\n        var position = positions[repo].split(',');\n        var el = document.querySelector('#'+repo)\n        if (el) {\n          el.style.left = position[0]\n          el.style.top = position[1]\n        }\n      });\n    }\n  });\n\n})\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":15},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/zeke/code/personal/repo-collage/src/index.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"3314862a8ebdb9a72f171d0b40f58351cc60f72f","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":15,"softTabs":true,"displayBuffer":{"id":16,"softWrap":false,"editorWidthInChars":121,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/zeke/code/personal/repo-collage/src/index.js","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/zeke/code/personal/repo-collage/src/index.js","focused":false,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/zeke/code/personal/repo-collage/src/index.js":1399758747518},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":19221036},"tree-view":{"directoryExpansionStates":{"src":{}},"selectedPath":"/Users/zeke/code/personal/repo-collage/src/index.js","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}