{"mode":"editor","version":1,"windowDimensions":{"x":427,"y":258,"width":1707,"height":943},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/zeke/code/support/seam","buffers":[{"text":"{\r\n  \"name\": \"MeetingBuddy\",\r\n  \"version\": \"0.0.1\",\r\n  \"private\": true,\r\n  \"scripts\": {\r\n    \"start\": \"node app.js\"\r\n  },\r\n  \"dependencies\": {\r\n    \"express\": \"3.4.7\",\r\n    \"jade\": \"*\",\r\n    \"mongodb\": \"*\",\r\n    \"mongoose\": \"*\",\r\n    \"passport\": \"*\",\r\n    \"passport-local\": \"*\",\r\n    \"passport-facebook\": \"~1.0.2\", \r\n    \"passport-twitter\": \"~1.0.2\",  \r\n    \"passport-google-oauth\": \"~0.1.5\",\r\n    \"connect-flash\": \"~0.1.1\", \r\n    \"bcrypt-nodejs\": \"*\",\r\n    \"email-templates\": \"0.0.5\",\r\n    \"nodemailer\": \"0.3.x\",\r\n    \"mongoose-findorcreate\": \"*\",\r\n    \"icalevent\": \"0.3.1\"\r\n  },\r\n  \"readmeFilename\": \"README.md\",\r\n  \"gitHead\": \"7ad1af6b88ca09aedbc265067776b2832d139c5a\",\r\n  \"description\": \"MeetingBuddy\\r ============\",\r\n  \"main\": \"app.js\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/jyu3138/MeetingBuddy.git\"\r\n  },\r\n  \"keywords\": [\r\n    \"MeetingBuddy\"\r\n  ],\r\n  \"author\": \"\",\r\n  \"license\": \"BSD\",\r\n  \"engines\": {\r\n\t\"node\": \"0.10.5\"\r\n\t}\r\n}\r\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":17},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/zeke/code/support/seam/package.json","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"6de3ccc7b439043ea1d56fdfb8dadd455b7bbbbf","deserializer":"TextBuffer"},{"text":"\r\n/**\r\n * Module dependencies.\r\n */\r\nvar landingPage = require('./routes/landingPage');\r\nvar dashboard = require('./routes/dashboard');\r\nvar meetings = require('./routes/meetings');\r\nvar user = require('./routes/user');\r\nvar task = require('./routes/task');\r\nvar index = require('./routes/index');\r\nvar team = require('./routes/team');\r\nvar http = require('http');\r\nvar path = require('path');\r\n//include the nodemailer module\r\nvar nodemailer = require('nodemailer');\r\n\r\nvar flash = require('connect-flash');\r\nvar express = require('express');\r\n// login\r\nvar passport = require('passport');\r\nrequire('./config/passport')(passport)\r\n\r\n// database setup\r\nvar mongoUri = process.env.MONGOLAB_URI ||\r\n\tprocess.env.MONGOHQ_URL ||\r\n  \t'mongodb://localhost:27017/MeetingBuddy';\r\n\r\nconsole.log(mongoUri);\r\n\r\nvar mongo = require('mongodb');\r\nvar mongoose = require('mongoose');\r\nmongoose.connect(mongoUri);\r\nmongoose.connection.on(\"open\", function(){\r\n  console.log(\"Connected to database\");\r\n});\r\n\r\nvar db = mongoose.connection;\r\n\r\n// server setup\r\nvar app = express();\r\n\r\n\r\n\r\n\r\n// all environments\r\napp.configure(function(){\r\n\tapp.set('port', process.env.PORT || 3000);\r\n\tapp.set('views', path.join(__dirname, 'views'));\r\n\tapp.set('view engine', 'jade');\r\n\tapp.use(express.favicon());\r\n\tapp.use(express.logger('dev'));\r\n\tapp.use(express.json());\r\n\tapp.use(express.urlencoded());\r\n\tapp.use(express.methodOverride());\r\n\tapp.use(express.cookieParser());\r\n\tapp.use(express.session({ secret: 'ilovemeetingbuddy' }));\r\n\tapp.use(express.static(path.join(__dirname, 'public')));\r\n\tapp.use(flash());\r\n\tapp.use(passport.initialize());\r\n\tapp.use(passport.session()); // persistent login sessions\r\n\tapp.use(app.router);\r\n});\r\n\r\n// development only\r\nif ('development' == app.get('env')) {\r\n  app.use(express.errorHandler());\r\n}\r\n\r\n//Landing Page\r\napp.get('/', landingPage.home);\r\napp.get('/home', landingPage.home);\r\napp.get('/login', landingPage.login);\r\napp.get('/survey', landingPage.survey);\r\napp.post('/addSurvey', landingPage.addSurvey);\r\napp.post('/addEmail', landingPage.addEmail);\r\napp.post('/contact', landingPage.contact);\r\n//Dashboard\r\napp.get('/dashboard', user.isLoggedIn, dashboard.dashboard);\r\n// app.post('/dashboard', user.isLoggedIn, dashboard.setWelcome);\r\n// app.get('/dashboard/meetings', user.isLoggedIn, dashboard.meetings);\r\n\r\n//Dashboard-Meetings\r\napp.get('/dashboard/meetings/makeMeeting', user.isLoggedIn, meetings.makeMeeting);\r\napp.get('/dashboard/meetings/makeMeeting/new', user.isLoggedIn, meetings.makeNewMeeting);\r\napp.post('/dashboard/meetings/makeMeeting/add', user.isLoggedIn, meetings.addMeeting);\r\n\r\n//update and edit meetings\r\napp.post('/dashboard/meetings/edit', user.isLoggedIn, meetings.editMeeting);\r\napp.post('/dashboard/meetings/edit/update', user.isLoggedIn, meetings.updateMeeting);\r\n\r\napp.post('/dashboard/meetings/view', user.isLoggedIn, meetings.viewMeeting);\r\napp.post('/dashboard/meetings/view/past', user.isLoggedIn, meetings.viewPast);\r\napp.get('/dashboard/meetings/view/pastMeeting', user.isLoggedIn, meetings.pastMeeting);\r\n\r\napp.get('/dashboard/meetings/pastMeeting', user.isLoggedIn, meetings.pastMeeting);\r\n\r\napp.post('/dashboard/meetings/start', user.isLoggedIn, meetings.postMeeting);\r\napp.get('/dashboard/meetings/start', user.isLoggedIn, meetings.getMeeting);\r\napp.post('/dashboard/meetings/start/addNote', user.isLoggedIn, meetings.addNote);\r\napp.post('/dashboard/meetings/start/addTask', user.isLoggedIn, meetings.addTask);\r\napp.get('/dashboard/meetings/end', user.isLoggedIn, meetings.endMeeting);\r\n\r\n\r\n//Tasks\r\n// app.get('/dashboard/tasks', user.isLoggedIn, task.getTasks);\r\n// app.post('/dashboard/tasks/current', user.isLoggedIn, task.getTasksByMeeting);\r\n\r\n// team member stuff\r\napp.get('/dashboard/team', user.isLoggedIn, team.team);\r\napp.post('/addMember', user.isLoggedIn, team.addMember);\r\n\r\n//app.post('/dashboard/meetings/startMeeting', user.isLoggedIn, meetings.startMeeting);\r\n//app.get('/tasks', user.isLoggedIn, interfaces.tasks);\r\n\r\n//app.get('/sidebarMeetings', user.isLoggedIn, interfaces.sidebarMeetings);\r\n//app.get('/sidebarNavbar', user.isLoggedIn, interfaces.sidebarNavbar);\r\n//app.get('/sidebarTasks', user.isLoggedIn, interfaces.sidebarTasks);\r\n//app.post('/addmeeting', user.isLoggedIn, interfaces.addMeeting);\r\n//app.post('/addnote', user.isLoggedIn, interfaces.addNote);\r\n//app.post('/addTask', user.isLoggedIn, interfaces.addTask);\r\n//app.post('/addproject', user.isLoggedIn, interfaces.addProject);\r\n//app.get('/finishMeeting', user.isLoggedIn, interfaces.finishMeeting);\r\n//app.get('/pastMeeting', user.isLoggedIn, interfaces.pastMeeting);\r\n//app.post('/viewPastMeeting', user.isLoggedIn, interfaces.viewPastMeeting);\r\n\r\n\r\n\r\n\r\n//product stuff\r\n// app.post('/finishTask', user.isLoggedIn, task.finishTask);\r\n// app.post('/deletetask', user.isLoggedIn, task.deleteTask);\r\n\r\n//account\r\napp.get('/signup', user.signup);\r\napp.get('/logout', user.logout);\r\napp.post('/signup', passport.authenticate('local-signup', {// process the signup form\r\n\tsuccessRedirect: '/dashboard', // redirect to the secure profile section\r\n\tfailureRedirect: '/signup', // redirect back to the signup page if there is an error\r\n\tfailureFlash: true // allow flash messages\r\n}));\r\napp.post('/login', passport.authenticate('local-login', {\r\n\tsuccessRedirect: '/dashboard', // redirect to the secure profile section\r\n\tfailureRedirect: '/home', // redirect back to the signup page if there is an error\r\n\tfailureFlash: true // allow flash messages\r\n}));\r\napp.get('/google/login', passport.authenticate('google-login'));\r\napp.get('/auth/google/callback',  passport.authenticate('google-login', {\r\n\tsuccessRedirect: '/dashboard', // redirect to the secure profile section\r\n\tfailureRedirect: '/', // redirect back to the signup page if there is an error\r\n\tfailureFlash: true // allow flash messages\r\n}))\r\n//error page\r\napp.get('/error', index.error);\r\n\r\nhttp.createServer(app).listen(app.get('port'), function(){\r\n  console.log('Express server listening on port ' + app.get('port'));\r\n});\r\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":19},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/zeke/code/support/seam/app.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"1de78070763c400b8f48dd6b6251761464b712df","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":17,"softTabs":true,"scrollTop":0,"scrollLeft":0,"displayBuffer":{"id":18,"softWrap":false,"editorWidthInChars":130,"tokenizedBuffer":{"bufferPath":"/Users/zeke/code/support/seam/package.json","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":19,"softTabs":true,"scrollTop":2072,"scrollLeft":0,"displayBuffer":{"id":20,"softWrap":false,"editorWidthInChars":134,"tokenizedBuffer":{"bufferPath":"/Users/zeke/code/support/seam/app.js","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/zeke/code/support/seam/app.js","focused":false,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/zeke/code/support/seam/package.json":1397760062914,"/Users/zeke/code/support/seam/app.js":1397760065801},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":13033059},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/zeke/code/support/seam/app.js","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}