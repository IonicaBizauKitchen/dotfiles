{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":22,"width":1440,"height":874},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/zeke/code/personal/github-url-to-object","buffers":[{"text":"\"use strict\"\n\nvar url = require(\"url\")\nvar util = require(\"util\")\nvar isUrl = require(\"is-url\")\n\nmodule.exports = function(repo_url) {\n  var obj = {}\n\n  if (!repo_url) return null\n\n  var shorthand = repo_url.match(/^([\\w-_]+)\\/([\\w-_\\.]+)#?([\\w-_\\.]+)?$/)\n  var antiquated = repo_url.match(/^git@[\\w-_\\.]+:([\\w-_]+)\\/([\\w-_\\.]+)$/)\n\n  if (shorthand) {\n    obj.user = shorthand[1]\n    obj.repo = shorthand[2]\n    obj.branch = shorthand[3] || \"master\"\n  } else if (antiquated) {\n    obj.user = antiquated[1]\n    obj.repo = antiquated[2].replace(/\\.git$/i, \"\")\n    obj.branch = \"master\"\n  } else {\n    if (!isUrl(repo_url)) return null\n    var parsedURL = url.parse(repo_url)\n    if (parsedURL.hostname != \"github.com\") return null\n    var parts = parsedURL.pathname.match(/^\\/([\\w-_]+)\\/([\\w-_\\.]+)/)\n    if (!parts) return null\n    obj.user = parts[1]\n    obj.repo = parts[2].replace(/\\.git$/i, \"\")\n    obj.branch = \"master\"\n  }\n\n  obj.tarball_url = util.format(\"https://api.github.com/repos/%s/%s/tarball/%s\", obj.user, obj.repo, obj.branch)\n\n  if (obj.branch === \"master\") {\n    obj.https_url = util.format(\"https://github.com/%s/%s\", obj.user, obj.repo)\n    obj.travis_url = util.format(\"https://travis-ci.org/%s/%s\", obj.user, obj.repo)\n  } else {\n    obj.https_url = util.format(\"https://github.com/%s/%s/tree/%s\", obj.user, obj.repo, obj.branch)\n    obj.travis_url = util.format(\"https://travis-ci.org/%s/%s?branch=%s\", obj.user, obj.repo, obj.branch)\n  }\n\n  return obj\n}\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":41},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/zeke/code/personal/github-url-to-object/index.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"8702294b203bdd6312c9db9181c6c6d745c03e52","deserializer":"TextBuffer"},{"text":"(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({},{},[])","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":45},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/zeke/code/personal/github-url-to-object/bundle.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"fe5b6a3a8dcec72b968835c987923f3976caaff1","deserializer":"TextBuffer"},{"text":"var mocha = require(\"mocha\")\nvar assert = require(\"assert\")\nvar gh = require(\"../index\")\n\ndescribe(\"github-url-to-object\", function() {\n\n  describe(\"shorthand\", function(){\n\n    it(\"supports user/repo style\", function(){\n      var obj = gh(\"user/repo#branch\")\n      assert.equal(obj.user, 'user')\n      assert.equal(obj.repo, 'repo')\n    })\n\n    it(\"supports user/repo#branch style\", function(){\n      var obj = gh(\"user/repo#branch\")\n      assert.equal(obj.user, 'user')\n      assert.equal(obj.repo, 'repo')\n      assert.equal(obj.branch, 'branch')\n    })\n\n    it(\"defaults to master branch\", function(){\n      var obj = gh(\"user/repo\")\n      assert.equal(obj.user, 'user')\n      assert.equal(obj.repo, 'repo')\n      assert.equal(obj.branch, 'master')\n    })\n\n  })\n\n  describe(\"oldschool\", function(){\n\n    it(\"supports git@ URLs\", function() {\n      var obj = gh(\"git@github.com:heroku/heroku-flags.git\")\n      assert.equal(obj.user, 'heroku')\n      assert.equal(obj.repo, 'heroku-flags')\n    })\n\n    it(\"defaults to master branch\", function() {\n      var obj = gh(\"git@github.com:heroku/heroku-flags.git\")\n      assert.equal(obj.branch, 'master')\n    })\n\n    it(\"supports git:// URLs\", function() {\n      var obj = gh(\"git://github.com/foo/bar.git\")\n      assert.equal(obj.user, 'foo')\n      assert.equal(obj.repo, 'bar')\n    })\n\n    it(\"defaults to master branch\", function() {\n      var obj = gh(\"git://github.com/foo/bar.git\")\n      assert.equal(obj.branch, 'master')\n    })\n\n  })\n\n  describe(\"http\", function(){\n\n    it(\"supports http URLs\", function() {\n      var obj = gh(\"http://github.com/zeke/outlet.git\")\n      assert.equal(obj.user, 'zeke')\n      assert.equal(obj.repo, 'outlet')\n    })\n\n    it(\"supports https URLs\", function() {\n      var obj = gh(\"https://github.com/zeke/outlet.git\")\n      assert.equal(obj.user, 'zeke')\n      assert.equal(obj.repo, 'outlet')\n    })\n\n    it(\"supports deep URLs\", function() {\n      var obj = gh(\"https://github.com/zeke/ruby-rails-sample/blob/b1e1000fedb6ca448dd78702de4fc78dedfee48c/app.json\")\n      assert.equal(obj.user, 'zeke')\n      assert.equal(obj.repo, 'ruby-rails-sample')\n    })\n\n    it(\"doesn't require .git extension\", function() {\n      var obj = gh(\"https://github.com/zeke/outlet\")\n      assert.equal(obj.user, 'zeke')\n      assert.equal(obj.repo, 'outlet')\n    })\n\n    it(\"defaults to master branch\", function() {\n      var obj = gh(\"https://github.com/zeke/outlet\")\n      assert.equal(obj.branch, 'master')\n    })\n\n  })\n\n  describe(\"properties\", function() {\n    var obj\n\n    before(function(){\n      obj = gh(\"zeke/ord\")\n    })\n\n    it(\"user\", function() {\n      assert.equal(obj.user, \"zeke\")\n    })\n\n    it(\"repo\", function() {\n      assert.equal(obj.repo, \"ord\")\n    })\n\n    it(\"branch\", function() {\n      assert.equal(obj.branch, \"master\")\n    })\n\n    it(\"tarball_url\", function() {\n      assert.equal(obj.tarball_url, \"https://api.github.com/repos/zeke/ord/tarball/master\")\n    })\n\n    it(\"https_url\", function() {\n      assert.equal(obj.https_url, \"https://github.com/zeke/ord\")\n    })\n\n    it(\"travis_url\", function() {\n      assert.equal(obj.travis_url, \"https://travis-ci.org/zeke/ord\")\n    })\n\n  })\n\n  describe(\"branch other than master\", function() {\n\n    var obj\n\n    before(function(){\n      obj = gh(\"zeke/ord#experiment\")\n    })\n\n    it(\"applies to tarball_url\", function() {\n      assert.equal(obj.tarball_url, \"https://api.github.com/repos/zeke/ord/tarball/experiment\")\n    })\n\n    it(\"applies to https_url\", function() {\n      assert.equal(obj.https_url, \"https://github.com/zeke/ord/tree/experiment\")\n    })\n\n    it(\"applies to travis_url\", function() {\n      assert.equal(obj.travis_url, \"https://travis-ci.org/zeke/ord?branch=experiment\")\n    })\n\n  })\n\n  describe(\"failure\", function(){\n\n    it(\"returns null if url is falsy\", function() {\n      assert.equal(gh(), null)\n      assert.equal(gh(null), null)\n      assert.equal(gh(undefined), null)\n      assert.equal(gh(\"\"), null)\n    })\n\n    it(\"returns null for non-github URLs\", function() {\n      var obj = gh(\"https://bitbucket.com/other/thing\")\n      assert.equal(obj, null)\n    })\n\n  })\n\n})\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":49},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/zeke/code/personal/github-url-to-object/test/index.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"1adfea1bf26afd7573a2058363d79f33c555e814","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":41,"softTabs":true,"displayBuffer":{"id":42,"softWrap":false,"editorWidthInChars":110,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/zeke/code/personal/github-url-to-object/index.js","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":45,"softTabs":true,"displayBuffer":{"id":46,"softWrap":false,"editorWidthInChars":110,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/zeke/code/personal/github-url-to-object/bundle.js","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":49,"softTabs":true,"displayBuffer":{"id":50,"softWrap":false,"editorWidthInChars":110,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/zeke/code/personal/github-url-to-object/test/index.js","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/zeke/code/personal/github-url-to-object/index.js","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/zeke/code/personal/github-url-to-object/index.js":1401862806448,"/Users/zeke/code/personal/github-url-to-object/bundle.js":1401862749097,"/Users/zeke/code/personal/github-url-to-object/test/index.js":1401862751197},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":306509},"tree-view":{"directoryExpansionStates":{"bin":{},"test":{}},"selectedPath":"/Users/zeke/code/personal/github-url-to-object/index.js","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"find-and-replace":{"viewState":{"findHistory":["});\nit","git","at the end","tarbal","sc"],"replaceHistory":["})\nit"],"modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false}}},"script":{"scriptOptionsViewState":""}}}