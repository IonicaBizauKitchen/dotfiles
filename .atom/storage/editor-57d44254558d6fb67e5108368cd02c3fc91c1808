{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":22,"width":1440,"height":874},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/zeke/code/forks/download-github-repo","buffers":[{"text":"\nvar fs = require('fs');\nvar rm = require('rimraf');\nvar tar = require('tar');\nvar wget = require('wget');\nvar zlib = require('zlib');\n\n/**\n * Expose `download`.\n */\n\nmodule.exports = download;\n\n/**\n * Download GitHub `repo` to `dest` and callback `fn(err)`.\n *\n * @param {String} repo\n * @param {String} dest\n * @param {Function} fn\n */\n\nfunction download(repo, dest, fn){\n  var url = github(normalize(repo));\n  var dl = wget.download(url, dest + '.tar.gz');\n\n  dl.on('error', function(err){\n    fn(err);\n\n    if (require('util').isError(err) && err['code'] === 'ENOTFOUND') {\n      return fn(new Error(\"You are not connected to the Internet\"))\n    } else if ( typeof(err) === 'string' ) {\n      return new Error(err)\n    } else {\n      return err\n    }\n\n  });\n\n\n\n> { [Error: getaddrinfo ENOTFOUND] code: 'ENOTFOUND', errno: 'ENOTFOUND', syscall: 'getaddrinfo' }\n> require('download-github-repo')('zeke/ordy', '/tmp/ord', function (err) { console.log(typeof err); console.log (err) })\nundefined\n> object\n{ [Error: getaddrinfo ENOTFOUND] code: 'ENOTFOUND', errno: 'ENOTFOUND', syscall: 'getaddrinfo' }\n> require('download-github-repo')('zeke/ordy', '/tmp/ord', function (err) { console.log(typeof err); console.log (err) })\nundefined\n> string\nServer respond 500\n\n\n\n\n  // Server respond 500\n\n  dl.on('end', function(file){\n    fs.createReadStream(file)\n      .pipe(zlib.createGunzip())\n      .pipe(tar.Extract({ path: dest, strip: 1 }))\n      .on('error', function(err){ fn(err); })\n      .on('end', function(){\n        rm(file, fn);\n      });\n  });\n}\n\n/**\n * Return a GitHub url for a given `repo` object.\n *\n * @param {Object} repo\n * @return {String}\n */\n\nfunction github(repo){\n  return 'https://codeload.github.com/'\n    + repo.owner\n    + '/'\n    + repo.name\n    + '/legacy.tar.gz/'\n    + repo.branch;\n}\n\n/**\n * Normalize a repo string.\n *\n * @param {String} string\n * @return {Object}\n */\n\nfunction normalize(string){\n  var owner = string.split('/')[0];\n  var name = string.split('/')[1];\n  var branch = 'master';\n\n  if (~name.indexOf('#')) {\n    branch = name.split('#')[1];\n    name = name.split('#')[0];\n  }\n\n  return {\n    owner: owner,\n    name: name,\n    branch: branch\n  };\n}","markers":{"markers":{"1":{"id":1,"range":[[74,0],[79,18]],"tailed":true,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":14,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/zeke/code/forks/download-github-repo/index.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"5c8de49be15ad41483c80cfb441fc38b9e0b18b1","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":14,"softTabs":true,"scrollTop":1445,"scrollLeft":0,"displayBuffer":{"id":15,"softWrap":false,"editorWidthInChars":110,"tokenizedBuffer":{"bufferPath":"/Users/zeke/code/forks/download-github-repo/index.js","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/zeke/code/forks/download-github-repo/index.js","focused":false,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/zeke/code/forks/download-github-repo/index.js":1395895620946},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":1533457},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/zeke/code/forks/download-github-repo/index.js","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}