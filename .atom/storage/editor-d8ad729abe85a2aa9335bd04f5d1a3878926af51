{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":22,"width":1440,"height":874},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/zeke/code/forks/atom-jshint","buffers":[{"text":"'use strict';\nvar _ = require('lodash');\nvar Subscriber = require('emissary').Subscriber;\nvar jshint = require('jshint').JSHINT;\nvar jsxhint = require('jshint-jsx').JSXHINT;\nvar loadConfig = require('./load-config');\nvar plugin = module.exports;\n\nSubscriber.extend(plugin);\n\nfunction updateStatusbar(error) {\n\tatom.workspaceView.statusBar.appendLeft('<span id=\"jshint-statusbar\" class=\"inline-block\">JSHint ' + error.line + ':' + error.character + ' ' + error.reason + '</span>');\n}\n\nfunction displayError(error, editor, editorView) {\n\tvar line = error[0].line || 1; // JSHint reports `line: 0` when config error\n\tvar row = line - 1;\n\tvar gutter = editorView.gutter;\n\tvar bufferRange = editor.bufferRangeForBufferRow(row);\n\tbufferRange.start.column = bufferRange.end.column = error.character;\n\tvar screenRange = editor.screenRangeForBufferRange(bufferRange);\n\tvar lineEl = editorView.lineElementForScreenRow(screenRange.start.row);\n\tlineEl.addClass('jshint-line');\n\n\tvar reasons = _.map(error, function (el) {\n\t\treturn el.character + ': ' + el.reason;\n\t}).join('\\n\\n');\n\n\tvar gutterRow = gutter.find(gutter.getLineNumberElement(row));\n\tgutterRow.attr('title', reasons);\n\tgutterRow.addClass('jshint-line-number');\n}\n\nfunction lint() {\n\tvar editor = atom.workspace.getActiveEditor();\n\tvar editorView = atom.workspaceView.getActiveView();\n\n\tif (!editor) {\n\t\treturn;\n\t}\n\n\tif (editor.getGrammar().name !== 'JavaScript') {\n\t\treturn;\n\t}\n\n\tvar file = editor.getUri();\n\tvar config = file ? loadConfig(file) : {};\n\n\t// reset\n\teditorView.resetDisplay();\n\teditorView.gutter.find('.jshint-line-number').removeClass('jshint-line-number');\n\tatom.workspaceView.statusBar.find('#jshint-statusbar').remove();\n\n\tvar linter = atom.config.get('jshint.transformJsx') ? jsxhint : jshint;\n\tlinter(editor.getText(), config, config.globals);\n\n\t// workaround the errors array sometimes containing `null`\n\tvar errors = _.compact(linter.errors);\n\n\tif (errors.length === 0) {\n\t\treturn;\n\t}\n\n\tvar ret = [];\n\n\t// aggregate same-line errors\n\t_.each(errors, function (el) {\n\t\tvar l = el.line;\n\n\t\tif (Array.isArray(ret[l])) {\n\t\t\tret[l].push(el);\n\n\t\t\tret[l] = _.sortBy(ret[l], function (el) {\n\t\t\t\treturn el.character;\n\t\t\t});\n\t\t} else {\n\t\t\tret[l] = [el];\n\t\t}\n\t});\n\n\t_.chain(ret).compact().each(function (error, i) {\n\t\tif (i === 0) {\n\t\t\tupdateStatusbar(error[0]);\n\t\t}\n\n\t\tdisplayError(error, editor, editorView);\n\t});\n}\n\nfunction registerEvents() {\n\tlint();\n\n\tatom.workspace.eachEditor(function (editor) {\n\t\tvar buffer = editor.getBuffer();\n\t\tvar events = 'saved contents-modified';\n\n\t\teditor.off('scroll-top-changed');\n\t\tplugin.unsubscribe(buffer);\n\n\t\tif (atom.config.get('jshint.validateOnlyOnSave')) {\n\t\t\tevents = 'saved';\n\t\t} else {\n\t\t\t// TODO: find a less noisy event for this\n\t\t\teditor.on('scroll-top-changed', _.debounce(lint, 200));\n\t\t}\n\n\t\tplugin.subscribe(buffer, events, _.debounce(lint, 50));\n\t});\n}\n\nplugin.configDefaults = {\n\tvalidateOnlyOnSave: false,\n\ttransformJsx: false\n};\n\nplugin.activate = function () {\n\tregisterEvents();\n\tplugin.subscribe(atom.config.observe('jshint.validateOnlyOnSave', registerEvents));\n};\n","markers":{"markers":{"1":{"id":1,"range":[[106,57],[106,57]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":23,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[0,13],[0,13]]},"newParams":{"reversed":true,"range":[[0,12],[0,13]]},"deserializer":"MarkerPatch"},{"oldRange":[[0,12],[0,13]],"newRange":[[0,12],[0,12]],"oldText":";","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[0,12],[0,12]],"newRange":[[0,12],[0,13]],"oldText":"","newText":";","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[106,52],[106,54]],"newRange":[[106,52],[106,52]],"oldText":"10","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[106,52],[106,52]],"newRange":[[106,52],[106,53]],"oldText":"","newText":"4","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[106,53],[106,53]],"newRange":[[106,53],[106,54]],"oldText":"","newText":"5","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[106,55],[106,55]]},"newParams":{"range":[[106,54],[106,55]]},"deserializer":"MarkerPatch"},{"oldRange":[[106,54],[106,55]],"newRange":[[106,54],[106,54]],"oldText":"0","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[106,54],[106,54]]},"newParams":{"range":[[106,53],[106,54]]},"deserializer":"MarkerPatch"},{"oldRange":[[106,53],[106,54]],"newRange":[[106,53],[106,53]],"oldText":"5","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[106,53],[106,53]]},"newParams":{"range":[[106,52],[106,53]]},"deserializer":"MarkerPatch"},{"oldRange":[[106,52],[106,53]],"newRange":[[106,52],[106,52]],"oldText":"4","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[106,52],[106,52]],"newRange":[[106,52],[106,53]],"oldText":"","newText":"5","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/zeke/code/forks/atom-jshint/index.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"6868d6a298844d0f0dfa1a34ba41ca74b01ef703","deserializer":"TextBuffer"},{"text":"@import 'ui-variables';\n\n.jshint-line {\n\t// background-color: fade(@background-color-error, 20%);\n}\n\n.editor {\n\t.gutter {\n\t\t.jshint-line-number {\n\t\t\tcolor: @text-color-error !important;\n\t\t\topacity: 1;\n\t\t\t&:hover {\n\t\t\t\tbackground-color: @background-color-highlight;\n\t\t\t}\n\t\t}\n\t}\n}\n","markers":{"markers":{"1":{"id":1,"range":[[17,0],[17,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":27,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/zeke/code/forks/atom-jshint/stylesheets/jshint.less","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"b23c77e499b0bc5d8daf8a8b840d8b899dbea192","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":23,"softTabs":false,"displayBuffer":{"id":24,"softWrap":false,"editorWidthInChars":110,"scrollTop":1970,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/zeke/code/forks/atom-jshint/index.js","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":27,"softTabs":false,"displayBuffer":{"id":28,"softWrap":false,"editorWidthInChars":110,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/zeke/code/forks/atom-jshint/stylesheets/jshint.less","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/zeke/code/forks/atom-jshint/stylesheets/jshint.less","focused":false,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"script":{"scriptOptionsViewState":""},"find-and-replace":{"viewState":{"findHistory":["setTim","Interva","set","lint"],"replaceHistory":[],"modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false}},"projectViewState":{"findHistory":["lint","text-color-error"],"replaceHistory":[],"pathsHistory":[],"modelState":{"useRegex":false,"caseSensitive":false}},"resultsModelState":{"useRegex":false,"caseSensitive":false}},"fuzzy-finder":{"/Users/zeke/code/forks/atom-jshint/index.js":1402422081578,"/Users/zeke/code/forks/atom-jshint/stylesheets/jshint.less":1402422111155},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":127083},"tree-view":{"directoryExpansionStates":{"stylesheets":{}},"selectedPath":"/Users/zeke/code/forks/atom-jshint/stylesheets/jshint.less","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}